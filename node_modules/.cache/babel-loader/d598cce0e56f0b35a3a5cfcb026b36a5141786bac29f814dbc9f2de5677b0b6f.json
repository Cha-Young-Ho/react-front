{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n\n/**\n * 게시판 상태 관리 커스텀 훅\n * @returns {object} 게시판 상태와 관련 함수들\n */\nfunction useBoardState() {\n  _s();\n  // 초기 게시글 데이터\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: '첫 번째 글',\n    body: '첫 번째 글의 내용입니다.'\n  }, {\n    id: 2,\n    title: '두 번째 글',\n    body: '두 번째 글의 내용입니다.'\n  }, {\n    id: 3,\n    title: '세 번째 글',\n    body: '세 번째 글의 내용입니다.'\n  }]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [search, setSearch] = useState('');\n  const [nextId, setNextId] = useState(4);\n  const [editMode, setEditMode] = useState(false);\n\n  // 글 추가 함수\n  const addPost = (title, body) => {\n    setPosts([...posts, {\n      id: nextId,\n      title,\n      body\n    }]);\n    setNextId(nextId + 1);\n  };\n\n  // 글 삭제 함수\n  const deletePost = id => {\n    setPosts(posts.filter(post => post.id !== id));\n    if (selectedPost && selectedPost.id === id) {\n      setSelectedPost(null);\n    }\n  };\n\n  // 글 수정 함수\n  const editPost = (id, newTitle, newBody) => {\n    const updatedPosts = posts.map(post => post.id === id ? {\n      ...post,\n      title: newTitle,\n      body: newBody\n    } : post);\n    setPosts(updatedPosts);\n    setSelectedPost(updatedPosts.find(post => post.id === id) || null);\n    setEditMode(false);\n  };\n\n  // 더블클릭 시 수정 모드 진입 함수\n  const handleDoubleClick = post => {\n    setSelectedPost(post);\n    setEditMode(true);\n  };\n\n  // 검색어가 포함된 게시글만 보여주는 필터링 함수\n  const getFilteredPosts = () => {\n    return posts.filter(post => post.title.includes(search) || post.body.includes(search)).sort((a, b) => b.id - a.id);\n  };\n  return {\n    posts,\n    selectedPost,\n    search,\n    editMode,\n    addPost,\n    deletePost,\n    editPost,\n    handleDoubleClick,\n    setSelectedPost,\n    setSearch,\n    setEditMode,\n    getFilteredPosts\n  };\n}\n_s(useBoardState, \"OdBE8x/YF44pHzneEq25Ixh7ytA=\");\nexport default useBoardState;","map":{"version":3,"names":["useState","useBoardState","_s","posts","setPosts","id","title","body","selectedPost","setSelectedPost","search","setSearch","nextId","setNextId","editMode","setEditMode","addPost","deletePost","filter","post","editPost","newTitle","newBody","updatedPosts","map","find","handleDoubleClick","getFilteredPosts","includes","sort","a","b"],"sources":["/Users/younghocha/my-project/base/frontend/src/hooks/useBoardState.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * 게시판 상태 관리 커스텀 훅\n * @returns {object} 게시판 상태와 관련 함수들\n */\nfunction useBoardState() {\n  // 초기 게시글 데이터\n  const [posts, setPosts] = useState([\n    { id: 1, title: '첫 번째 글', body: '첫 번째 글의 내용입니다.' },\n    { id: 2, title: '두 번째 글', body: '두 번째 글의 내용입니다.' },\n    { id: 3, title: '세 번째 글', body: '세 번째 글의 내용입니다.' }\n  ]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [search, setSearch] = useState('');\n  const [nextId, setNextId] = useState(4);\n  const [editMode, setEditMode] = useState(false);\n\n  // 글 추가 함수\n  const addPost = (title, body) => {\n    setPosts([\n      ...posts,\n      { id: nextId, title, body }\n    ]);\n    setNextId(nextId + 1);\n  };\n\n  // 글 삭제 함수\n  const deletePost = (id) => {\n    setPosts(posts.filter(post => post.id !== id));\n    if (selectedPost && selectedPost.id === id) {\n      setSelectedPost(null);\n    }\n  };\n\n  // 글 수정 함수\n  const editPost = (id, newTitle, newBody) => {\n    const updatedPosts = posts.map(post =>\n      post.id === id ? { ...post, title: newTitle, body: newBody } : post\n    );\n    setPosts(updatedPosts);\n    setSelectedPost(\n      updatedPosts.find(post => post.id === id) || null\n    );\n    setEditMode(false);\n  };\n\n  // 더블클릭 시 수정 모드 진입 함수\n  const handleDoubleClick = (post) => {\n    setSelectedPost(post);\n    setEditMode(true);\n  };\n\n  // 검색어가 포함된 게시글만 보여주는 필터링 함수\n  const getFilteredPosts = () => {\n    return posts\n      .filter(post =>\n        post.title.includes(search) ||\n        post.body.includes(search)\n      )\n      .sort((a, b) => b.id - a.id);\n  };\n\n  return {\n    posts,\n    selectedPost,\n    search,\n    editMode,\n    addPost,\n    deletePost,\n    editPost,\n    handleDoubleClick,\n    setSelectedPost,\n    setSearch,\n    setEditMode,\n    getFilteredPosts,\n  };\n}\n\nexport default useBoardState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}